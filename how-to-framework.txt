###########################################################
How to add files to the new framework structure with CMake:
###########################################################

-> class files (.h, .hpp, .cpp, ...) belong into "renderint"
-> application files (main.cpp) belong into "apps"
-> resources (shaders, meshes, textures) belong into "resources"

Adding new application:
###########################################################
-> copy an existing application folder
-> rename it with "rtr_" keeping in front (e.g. "apps/rtr_new_app")
-> in new folder change CMakeLists.txt file ("apps/rtr_new_app/CMakeLists.txt"):
	-> replace copied project name with new one in line 25
	-> ... InitApp(${CMAKE_PROJECT_NAME}_new_app) ...
-> replace main.cpp from copied project with yours

Adding new source files:
###########################################################
-> place .cpp files into "rendering/src/rtr"
	-> creating subdirectories for convenience is possible (e.g. "rendering/src/rtr/some_module")
-> place .hpp files into "rendering/include/rtr"
	-> again, subdirectories ("rendering/include/rtr/some_module")
-> add new subdirectories (here "some_module/") to rendering/CMakeLists.txt:
	-> ...	# header files 
			install(DIRECTORY ${PROJECT_INCLUDE_DIR}/rtr/ren DESTINATION include/rtr FILES_MATCHING PATTERN "*.*h")
			install(DIRECTORY ${PROJECT_INCLUDE_DIR}/rtr/some_module DESTINATION include/rtr FILES_MATCHING PATTERN "*.*h")


Adding resources:
###########################################################
-> place resource files in according subdirectories in resources/
-> included file types can be found in top-level CMakeLists.txt (end of file), so if a file format isn't included yet, add it there 


Including:
###########################################################
-> include headers like this: (according to file structure in install/include/)
	#include <rtr/ren/some_class.hpp>
	#include <rtr/some_module/some_other_class.hpp>
-> paths to resource files:	"../resources/.."
	-> e.g. texture: "../resources/textures/some_texture.png"
	-> e.g. shaders: "../resources/shaders/some_shader.frag/vert/geom"
	-> e.g. objects: "../resources/objects/some_object.obj"

Run CMake:
###########################################################
-> when pulling git from scratch:
	-> create framework/build directory
	-> in framework/build, run ccmake ..
	-> press 'c' 
	-> if errors occur, see if libraries mentioned in error message are installed and in standard paths
	-> press 'c' until you see the option 'g' (generate) appear at the bottom of the terminal
	-> run make install
	-> done!
	-> run new app from install/bin
-> adding "install" to the make command is important! otherwise, changes in shaders won't be added to install folder#
-> if problems with ccmake .. occur, ask Adrian and Carl, I'm clueless then - Anny ;)